@page
@model FoxholeIntelboard.Pages.Lists.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Inventory</h4>
<hr />

<div class="btn-group">
    <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
        @(Model.SelectedFactionId == 0 ? "Warden" : "Colonial")
    </button>
    <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="?SelectedFactionId=0">Warden</a></li>
        <li><a class="dropdown-item" href="?SelectedFactionId=1">Colonial</a></li>
    </ul>
</div>


<div class="d-flex flex-row">
    <!-- Main Form Column -->
    <div class="col-md-8">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group mb-3">
                <label asp-for="Inventory.Name" class="control-label"></label>
                <input asp-for="Inventory.Name" class="form-control" />
                <span asp-validation-for="Inventory.Name" class="text-danger"></span>
            </div>
         

            <!-- Dropdowns per kategori -->
            <div class="d-flex flex-wrap gap-3 mb-4">
                @foreach (var category in Model.Categories)
                {
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                            @category.Name
                        </button>
                        <ul class="dropdown-menu">
                            @foreach (var item in Model.Ammunitions.Where(i => i.CategoryId == category.Id))
                            {
                                <li class="dropdown-item d-flex justify-content-between align-items-center">
                                    <span>@item.Name</span>
                                    <span>
                                        <button type="button" class="btn btn-sm btn-success me-1" onclick="addToList(@item.Id, '@item.Name', 'Ammunition')">+</button>
                                        <button type="button" class="btn btn-sm btn-danger" onclick="removeFromList(@item.Id, 'Ammunition')">-</button>
                                    </span>
                                </li>
                            }

                            @if (Model.SelectedFactionId != null)
                            {
                                var factionWeapons = Model.Weapons.Where(w => w.FactionId == Model.SelectedFactionId);
                                foreach (var item in factionWeapons)
                                {
                                    <li class="dropdown-item d-flex justify-content-between align-items-center">
                                        <span>@item.Name</span>
                                        <span>
                                            <button type="button" class="btn btn-sm btn-success me-1" onclick="addToList(@item.Id, '@item.Name', 'Weapon')">+</button>
                                            <button type="button" class="btn btn-sm btn-danger" onclick="removeFromList(@item.Id, 'Weapon')">-</button>
                                        </span>
                                    </li>
                                }
                            }

                        </ul>
                    </div>
                }

                <!-- Material Dropdown -->
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                        Supplies
                    </button>
                    <ul class="dropdown-menu">
                        @foreach (var item in Model.Materials)
                        {
                            <li class="dropdown-item d-flex justify-content-between align-items-center">
                                <span>@item.Name</span>
                                <span>
                                    <button type="button" class="btn btn-sm btn-success me-1" onclick="addToList(@item.Id, '@item.Name', 'Material')">+</button>
                                    <button type="button" class="btn btn-sm btn-danger" onclick="removeFromList(@item.Id, 'Material')">-</button>
                                </span>
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <input type="hidden" name="SelectedItems" id="SelectedItems" />
            <div class="form-group mt-4">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>

        <div class="mt-3">
            <a asp-page="Index">Back to List</a>
        </div>
    </div>

    <!-- Sticky Sidebar -->
    <div id="your-list" class="inventory-sidebar">
        <h5>Your List</h5>
        <ul id="listDisplay" class="list-group"></ul>
        <div id="cost-summary">
            <h5>Total cost:</h5>
            <div id="costDisplay"></div>
        </div>
    </div>
</div>



@section Scripts { 
    @{
        <script>
            window.productionCosts = @Html.Raw(Json.Serialize(Model.CraftableItems.ToList()));
            window.resources = @Html.Raw(Json.Serialize(Model.Resources.Select(r => new { id = r.Id, name = r.Name })));
            window.materials = @Html.Raw(Json.Serialize(Model.Materials.Select(m => new { id = m.Id, name = m.Name })));
        </script>
        <script src="~/js/inventory-create.js"></script>
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
