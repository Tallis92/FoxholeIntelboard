@page
@model FoxholeIntelboard.Pages.Ammunitions.CreateModel

@{
    ViewData["Title"] = "Ammunition";
}
<h1>Create</h1>

<h4>Ammunition</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Ammunitions.Name" class="control-label"></label>
                <input asp-for="Ammunitions.Name" class="form-control" />
                <span asp-validation-for="Ammunitions.Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Ammunitions.Description" class="control-label"></label>
                <textarea asp-for="Ammunitions.Description" class="form-control"></textarea>
                <span asp-validation-for="Ammunitions.Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Ammunitions.CrateAmount" class="control-label"></label>
                <input asp-for="Ammunitions.CrateAmount" class="form-control" />
                <span asp-validation-for="Ammunitions.CrateAmount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ammunitions.Damage">Damage Type</label>
                <select asp-for="Ammunitions.Damage" asp-items="Model.DamageTypeOptions" class="form-control">
                    <option value="">-- Select Damage Type --</option>
                </select>
                <span asp-validation-for="Ammunitions.Damage" class="text-danger"></span>
            </div>

            <p>Choose amount of materials required:</p>
            <input type="hidden" name="SelectedCost" id="SelectedCost" />

            <div id="selectCosts" style="display: flex; gap: 10px;">
                <input type="radio" name="cost" value="1"> 1 Material
                <input type="radio" name="cost" value="2"> 2 Materials
                <input type="radio" name="cost" value="3"> 3 Materials
            </div>

            <h2>Material Cost</h2>
            <br />
            <div id="materialCostsContainer"></div>

            <div class="form-group mt-3">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

<script>
    document.addEventListener("DOMContentLoaded", async () => {
        const selectedCosts = document.getElementById("selectCosts");
        const materialCostsContainer = document.getElementById("materialCostsContainer");
        let materials = [];

        // 1) fetch materials from your API endpoint
        try {
            const resp = await fetch("https://localhost:7088/api/Material");
            if (!resp.ok) throw new Error(`HTTP ${resp.status}`);
            materials = await resp.json();
        } catch (err) {
            console.error("Failed to load materials:", err);
            return;
        }

        // 2) wire up your radio buttons
        selectedCosts.addEventListener("change", () => {
            const selectedRadio = selectedCosts.querySelector('input[name="cost"]:checked');
            if (!selectedRadio) return;

            const selectedValue = parseInt(selectedRadio.value, 10);
            materialCostsContainer.innerHTML = "";

            for (let i = 0; i < selectedValue; i++) {
                const div = document.createElement("div");
                div.className = "form-group";
                div.innerHTML = `
              <div style="border: 1px solid grey; text-align: center; padding: 10px;">
                <label for="Ammunitions_ProductionCost_${i}__MaterialId">
                  Material ${i + 1}
                </label>
                <select
                  name="Ammunitions.ProductionCost[${i}].MaterialId"
                  class="form-control"
                  style="background-color: #f8f9fa; text-align: center;"
                >
                  <option value="">-- Select Material --</option>
                  ${materials.map(r => `<option value="${r.id}">${r.name}</option>`).join("")}
                </select>

                <label for="Ammunitions_ProductionCost_${i}__Amount">
                  Amount
                </label>
                <input
                  type="number"
                  name="Ammunitions.ProductionCost[${i}].Amount"
                  class="form-control"
                />
              </div>
              <br/>
            `;
                materialCostsContainer.appendChild(div);
            }
        });
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
