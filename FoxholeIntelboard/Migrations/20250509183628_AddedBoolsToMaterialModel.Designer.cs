// <auto-generated />
using FoxholeIntelboard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoxholeIntelboard.Migrations
{
    [DbContext(typeof(IntelboardDBContext))]
    [Migration("20250509183628_AddedBoolsToMaterialModel")]
    partial class AddedBoolsToMaterialModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoxholeIntelboard.Models.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CraftableItemId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CraftableItemId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ResourceId");

                    b.ToTable("Costs", (string)null);
                });

            modelBuilder.Entity("FoxholeIntelboard.Models.CraftableItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CraftableItems", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("FoxholeIntelboard.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("FoxholeIntelboard.Models.Ammunition", b =>
                {
                    b.HasBaseType("FoxholeIntelboard.Models.CraftableItem");

                    b.Property<int>("CrateAmount")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("SpecialProperties")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Ammunitions", (string)null);
                });

            modelBuilder.Entity("FoxholeIntelboard.Models.Material", b =>
                {
                    b.HasBaseType("FoxholeIntelboard.Models.CraftableItem");

                    b.Property<int>("CrateAmount")
                        .HasColumnType("int");

                    b.Property<bool?>("LargeMaterial")
                        .HasColumnType("bit");

                    b.Property<bool?>("TechMaterial")
                        .HasColumnType("bit");

                    b.ToTable("Materials", (string)null);
                });

            modelBuilder.Entity("FoxholeIntelboard.Models.Cost", b =>
                {
                    b.HasOne("FoxholeIntelboard.Models.CraftableItem", "CraftableItem")
                        .WithMany("ProductionCost")
                        .HasForeignKey("CraftableItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoxholeIntelboard.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FoxholeIntelboard.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CraftableItem");

                    b.Navigation("Material");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("FoxholeIntelboard.Models.Ammunition", b =>
                {
                    b.HasOne("FoxholeIntelboard.Models.CraftableItem", null)
                        .WithOne()
                        .HasForeignKey("FoxholeIntelboard.Models.Ammunition", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoxholeIntelboard.Models.Material", b =>
                {
                    b.HasOne("FoxholeIntelboard.Models.CraftableItem", null)
                        .WithOne()
                        .HasForeignKey("FoxholeIntelboard.Models.Material", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoxholeIntelboard.Models.CraftableItem", b =>
                {
                    b.Navigation("ProductionCost");
                });
#pragma warning restore 612, 618
        }
    }
}
